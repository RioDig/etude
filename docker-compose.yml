networks:
  etude:
  solo:
  solo-etude:

volumes:
  db_data:        # том для основной БД
  authdb_data:    # том для БД авторизации

services:
  web:
    container_name: "web"
    image: etude-front:latest
    ports:
      - "80:80"
    environment:
      - NODE_ENV=development
    restart: always
    depends_on:
      - backend
    networks:
      - etude

  auth:
    container_name: "auth"
    image: etude-auth:latest
    ports:
      - "0.0.0.0:8000:8000"
    depends_on:
      - authdb
    environment:
      - DB_HOST=authdb
      - DB_PORT=5432
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASS=postgres
    restart: always
    networks:
      - solo
      - solo-etude

  authdb:
    container_name: "authdb"
    image: postgres:alpine3.18
    restart: always
    ports:
      - "6432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    networks:
      - solo
    volumes:
      - authdb_data:/var/lib/postgresql/data

  db:
    container_name: "db"
    image: postgres:alpine3.18
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    networks:
      - etude
    volumes:
      - db_data:/var/lib/postgresql/data

  redis:
    image: docker.io/redis/redis-stack:latest
    environment:
      REDIS_ARGS: --requirepass secret
    restart: always
    networks:
      - etude

  backend:
    container_name: "backend"
    image: etude-backend:latest
    ports:
      - "0.0.0.0:8080:8080"
    depends_on:
      - db
      - redis
    networks:
      - etude
      - solo-etude
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
