"""add docs2

Revision ID: 596fa3e2cd56
Revises: 68dbf704863b
Create Date: 2025-04-29 23:02:33.899275

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '596fa3e2cd56'
down_revision: Union[str, None] = '68dbf704863b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('documents', sa.Column('external_id', sa.String(), nullable=True))
    op.add_column('documents', sa.Column('description', sa.Text(), nullable=True))
    op.add_column('documents', sa.Column('course_name', sa.String(), nullable=False))
    op.add_column('documents', sa.Column('track', sa.String(), nullable=False))
    op.add_column('documents', sa.Column('format', sa.String(), nullable=False))
    op.add_column('documents', sa.Column('training_center', sa.String(), nullable=False))
    op.add_column('documents', sa.Column('price', sa.Integer(), nullable=False))
    op.add_column('documents', sa.Column('start_date', sa.DateTime(), nullable=False))
    op.add_column('documents', sa.Column('end_date', sa.DateTime(), nullable=False))
    op.add_column('documents', sa.Column('author_id', sa.Integer(), nullable=False))
    op.add_column('documents', sa.Column('status', sa.String(), nullable=False))
    op.add_column('documents', sa.Column('approval_history', sa.Text(), nullable=True))
    op.add_column('documents', sa.Column('solo_doc_id', sa.String(), nullable=True))
    op.add_column('documents', sa.Column('approval_timeout', sa.Integer(), nullable=False))
    op.alter_column('documents', 'title',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('documents', 'type',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('documents', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.create_index(op.f('ix_documents_external_id'), 'documents', ['external_id'], unique=True)
    op.drop_constraint('documents_owner_id_fkey', 'documents', type_='foreignkey')
    op.drop_column('documents', 'owner_id')
    op.drop_column('documents', 'content')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('documents', sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('documents', sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('documents_owner_id_fkey', 'documents', 'users', ['owner_id'], ['id'])
    op.drop_index(op.f('ix_documents_external_id'), table_name='documents')
    op.alter_column('documents', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.alter_column('documents', 'type',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('documents', 'title',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('documents', 'approval_timeout')
    op.drop_column('documents', 'solo_doc_id')
    op.drop_column('documents', 'approval_history')
    op.drop_column('documents', 'status')
    op.drop_column('documents', 'author_id')
    op.drop_column('documents', 'end_date')
    op.drop_column('documents', 'start_date')
    op.drop_column('documents', 'price')
    op.drop_column('documents', 'training_center')
    op.drop_column('documents', 'format')
    op.drop_column('documents', 'track')
    op.drop_column('documents', 'course_name')
    op.drop_column('documents', 'description')
    op.drop_column('documents', 'external_id')
    # ### end Alembic commands ###
