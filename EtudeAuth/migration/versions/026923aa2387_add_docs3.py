"""add docs3

Revision ID: 026923aa2387
Revises: 596fa3e2cd56
Create Date: 2025-05-01 17:40:35.741032

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '026923aa2387'
down_revision: Union[str, None] = '596fa3e2cd56'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('companies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_companies_id'), 'companies', ['id'], unique=False)
    op.create_index(op.f('ix_companies_name'), 'companies', ['name'], unique=True)
    op.create_table('departments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_departments_id'), 'departments', ['id'], unique=False)
    op.create_index(op.f('ix_departments_name'), 'departments', ['name'], unique=False)
    op.add_column('documents', sa.Column('EtudeDocID', sa.String(), nullable=True))
    op.add_column('documents', sa.Column('coordinating', sa.JSON(), nullable=True))
    op.add_column('documents', sa.Column('isApproval', sa.Boolean(), nullable=True))
    op.add_column('documents', sa.Column('DocInfo', sa.JSON(), nullable=True))
    op.add_column('documents', sa.Column('owner_id', sa.Integer(), nullable=True))
    op.alter_column('documents', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    op.drop_index('ix_documents_external_id', table_name='documents')
    op.create_index(op.f('ix_documents_EtudeDocID'), 'documents', ['EtudeDocID'], unique=True)
    op.create_foreign_key(None, 'documents', 'users', ['owner_id'], ['id'])
    op.drop_column('documents', 'approval_history')
    op.drop_column('documents', 'end_date')
    op.drop_column('documents', 'type')
    op.drop_column('documents', 'external_id')
    op.drop_column('documents', 'course_name')
    op.drop_column('documents', 'description')
    op.drop_column('documents', 'author_id')
    op.drop_column('documents', 'approval_timeout')
    op.drop_column('documents', 'solo_doc_id')
    op.drop_column('documents', 'format')
    op.drop_column('documents', 'training_center')
    op.drop_column('documents', 'price')
    op.drop_column('documents', 'updated_at')
    op.drop_column('documents', 'title')
    op.drop_column('documents', 'track')
    op.drop_column('documents', 'start_date')
    op.drop_column('documents', 'status')
    op.add_column('users', sa.Column('org_email', sa.String(), nullable=True))
    op.add_column('users', sa.Column('name', sa.String(), nullable=True))
    op.add_column('users', sa.Column('surname', sa.String(), nullable=True))
    op.add_column('users', sa.Column('patronymic', sa.String(), nullable=True))
    op.add_column('users', sa.Column('position', sa.String(), nullable=True))
    op.add_column('users', sa.Column('EtudeID', sa.Integer(), nullable=True))
    op.add_column('users', sa.Column('department_id', sa.Integer(), nullable=True))
    op.create_index(op.f('ix_users_org_email'), 'users', ['org_email'], unique=True)
    op.create_foreign_key(None, 'users', 'departments', ['department_id'], ['id'])
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'full_name')
    op.drop_column('users', 'disabled')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('disabled', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('full_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_index(op.f('ix_users_org_email'), table_name='users')
    op.drop_column('users', 'department_id')
    op.drop_column('users', 'EtudeID')
    op.drop_column('users', 'position')
    op.drop_column('users', 'patronymic')
    op.drop_column('users', 'surname')
    op.drop_column('users', 'name')
    op.drop_column('users', 'org_email')
    op.add_column('documents', sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('documents', sa.Column('start_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('documents', sa.Column('track', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('documents', sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('documents', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('documents', sa.Column('price', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('documents', sa.Column('training_center', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('documents', sa.Column('format', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('documents', sa.Column('solo_doc_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('documents', sa.Column('approval_timeout', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('documents', sa.Column('author_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('documents', sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('documents', sa.Column('course_name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('documents', sa.Column('external_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('documents', sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('documents', sa.Column('end_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('documents', sa.Column('approval_history', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'documents', type_='foreignkey')
    op.drop_index(op.f('ix_documents_EtudeDocID'), table_name='documents')
    op.create_index('ix_documents_external_id', 'documents', ['external_id'], unique=False)
    op.alter_column('documents', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_column('documents', 'owner_id')
    op.drop_column('documents', 'DocInfo')
    op.drop_column('documents', 'isApproval')
    op.drop_column('documents', 'coordinating')
    op.drop_column('documents', 'EtudeDocID')
    op.drop_index(op.f('ix_departments_name'), table_name='departments')
    op.drop_index(op.f('ix_departments_id'), table_name='departments')
    op.drop_table('departments')
    op.drop_index(op.f('ix_companies_name'), table_name='companies')
    op.drop_index(op.f('ix_companies_id'), table_name='companies')
    op.drop_table('companies')
    # ### end Alembic commands ###
